{"version":3,"file":"renderHook.js","names":["_react","_interopRequireDefault","require","_render","obj","__esModule","default","renderHook","renderCallback","options","initialProps","wrapper","result","React","createRef","TestComponent","renderCallbackProps","renderResult","useEffect","current","rerender","baseRerender","unmount","render","createElement","rerenderCallbackProps"],"sources":["../src/renderHook.tsx"],"sourcesContent":["import React from 'react';\nimport type { ComponentType } from 'react';\nimport render from './render';\n\nexport type RenderHookResult<Result, Props> = {\n  rerender: (props: Props) => void;\n  result: { current: Result };\n  unmount: () => void;\n};\n\nexport type RenderHookOptions<Props> = Props extends\n  | object\n  | string\n  | number\n  | boolean\n  ? {\n      initialProps: Props;\n      wrapper?: ComponentType<any>;\n    }\n  : { wrapper?: ComponentType<any>; initialProps?: never } | undefined;\n\nexport function renderHook<Result, Props>(\n  renderCallback: (props: Props) => Result,\n  options?: RenderHookOptions<Props>\n): RenderHookResult<Result, Props> {\n  const initialProps = options?.initialProps;\n  const wrapper = options?.wrapper;\n\n  const result: React.MutableRefObject<Result | null> = React.createRef();\n\n  function TestComponent({\n    renderCallbackProps,\n  }: {\n    renderCallbackProps: Props;\n  }) {\n    const renderResult = renderCallback(renderCallbackProps);\n\n    React.useEffect(() => {\n      result.current = renderResult;\n    });\n\n    return null;\n  }\n\n  const { rerender: baseRerender, unmount } = render(\n    // @ts-expect-error since option can be undefined, initialProps can be undefined when it should'nt\n    <TestComponent renderCallbackProps={initialProps} />,\n    { wrapper }\n  );\n\n  function rerender(rerenderCallbackProps: Props) {\n    return baseRerender(\n      <TestComponent renderCallbackProps={rerenderCallbackProps} />\n    );\n  }\n\n  // @ts-expect-error result is ill typed because ref is initialized to null\n  return { result, rerender, unmount };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAmBvB,SAASG,UAAUA,CACxBC,cAAwC,EACxCC,OAAkC,EACD;EACjC,MAAMC,YAAY,GAAGD,OAAO,EAAEC,YAAY;EAC1C,MAAMC,OAAO,GAAGF,OAAO,EAAEE,OAAO;EAEhC,MAAMC,MAA6C,gBAAGC,cAAK,CAACC,SAAS,EAAE;EAEvE,SAASC,aAAaA,CAAC;IACrBC;EAGF,CAAC,EAAE;IACD,MAAMC,YAAY,GAAGT,cAAc,CAACQ,mBAAmB,CAAC;IAExDH,cAAK,CAACK,SAAS,CAAC,MAAM;MACpBN,MAAM,CAACO,OAAO,GAAGF,YAAY;IAC/B,CAAC,CAAC;IAEF,OAAO,IAAI;EACb;EAEA,MAAM;IAAEG,QAAQ,EAAEC,YAAY;IAAEC;EAAQ,CAAC,GAAG,IAAAC,eAAM;EAAA;EAChD;EACAvB,MAAA,CAAAM,OAAA,CAAAkB,aAAA,CAACT,aAAa;IAACC,mBAAmB,EAAEN;EAAa,EAAG,EACpD;IAAEC;EAAQ,CAAC,CACZ;EAED,SAASS,QAAQA,CAACK,qBAA4B,EAAE;IAC9C,OAAOJ,YAAY,eACjBrB,MAAA,CAAAM,OAAA,CAAAkB,aAAA,CAACT,aAAa;MAACC,mBAAmB,EAAES;IAAsB,EAAG,CAC9D;EACH;;EAEA;EACA,OAAO;IAAEb,MAAM;IAAEQ,QAAQ;IAAEE;EAAQ,CAAC;AACtC"}